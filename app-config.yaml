app:
  title: Unity Backstage
  baseUrl: http://localhost:3000

  googleAnalyticsTrackingId: test

  support:
    url: https://github.com/Unity-Technologies/unity-backstage/issues # Used by common ErrorPage
    items: # Used by common SupportButton component
      - title: Issues
        icon: github
        links:
          - url: https://github.com/Unity-Technologies/unity-backstage/issues
            title: GitHub Issues

organization:
  name: Unity

backend:
  baseUrl: http://localhost:7000
  listen:
    port: 7000
  csp:
    connect-src:
      [
        "'self'",
        "http:",
        "https:",
        "backstage.stg.mz.internal.unity3d.com:3000",
      ]
    img-src:
      [
        "'self'",
        "data: https://avatars.githubusercontent.com",
        "data: http://www.w3.org/2000/svg",
      ]
  cors:
    origin: http://localhost:3000
    methods: [GET, POST, PUT, DELETE]
    credentials: true
  # config options: https://node-postgres.com/api/client
  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
      # https://node-postgres.com/features/ssl
      #ssl: require # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      #ca: # if you have a CA file and want to verify it you can uncomment this section
      #  $file: <file-path>/ca/server.crt
  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir

# github app https://github.com/organizations/Unity-Technologies-Migration/settings/installations/16302831
# documentation on this https://backstage.io/docs/plugins/github-apps
integrations:
  github:
    - host: github.com
      apps:
        - $include: github-app-credentials.yaml
    - host: github.cds.internal.unity3d.com
      apiBaseUrl: https://github.cds.internal.unity3d.com/api/v3
      apps:
        - $include: github-app-credentials-stg-cds.yaml

# sonarqube is going away, we can replace with snyk when ready
# proxy:
#   '/sonarqube':
#     target: https://sonarqube.internal.unity3d.com/api
#     allowedMethods: ['GET']
#     headers:
#       Authorization: Basic ${SONARQUBE_AUTH}

# sonarQube:
#   baseUrl: https://sonarqube.internal.unity3d.com

# Reference documentation http://backstage.io/docs/features/techdocs/configuration
# Note: After experimenting with basic setup, use CI/CD to generate docs
# and an external cloud storage when deploying TechDocs for production use-case.
# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
techdocs:
  builder: "local" # Alternatives - 'external'
  generators:
    techdocs: "docker" # Alternatives - 'local'
  publisher:
    type: "local" # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.

# see https://backstage.io/docs/tutorials/quickstart-app-auth to know more about enabling auth providers
# oauth app setup in https://github.com/organizations/Unity-Technologies-Migration/settings/applications/1606623
auth:
  # see https://backstage.io/docs/tutorials/quickstart-app-auth to know more about enabling auth providers
  providers:
    github:
      development:
        clientId: ${AUTH_GITHUB_CLIENT_ID}
        clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}

# scaffolder:
#   github:
#     token: ${GITHUB_TOKEN}
#     visibility: public # or 'internal' or 'private'

catalog:
  rules:
    - allow:
        [
          Component,
          System,
          API,
          Group,
          User,
          Template,
          Location,
          Domain,
          Resource,
        ]

  locations:
    - type: github-multi-org
      target: https://github.com
      # orgs:
      #   - name: Unity-Technologies-Migration
      #     namespace: github

    - type: github-multi-org
      target: https://github.cds.internal.unity3d.com
      # orgs:
      #   - name: unity
      #     namespace: githubCDS

    # This will look on the main/master branch of all repos in the org for a catalog-info.yaml file, if it finds this file it will add it to the app
    - type: github-discovery
      target: https://github.com/Unity-Technologies-Migration/*/blob/master/catalog-info.yaml

    # Custom examples
    - type: url
      target: https://github.com/Unity-Technologies-Migration/unity-backstage-catalog-model/blob/main/all-components.yaml

    - type: url
      target: https://github.com/Unity-Technologies-Migration/unity-backstage-catalog-model/blob/main/all-systems.yaml

    - type: url
      target: https://github.com/Unity-Technologies-Migration/unity-backstage-catalog-model/blob/main/all-apis.yaml

    - type: url
      target: https://github.com/Unity-Technologies-Migration/unity-backstage-catalog-model/blob/main/all-domains.yaml

    - type: url
      target: https://github.com/Unity-Technologies-Migration/unity-backstage-catalog-model/blob/main/all-resources.yaml

    - type: url
      target: https://github.com/Unity-Technologies-Migration/unity-backstage-catalog-model/blob/main/create/org-one.yaml

    - type: url
      target: https://github.com/Unity-Technologies-Migration/unity-backstage-catalog-model/blob/main/technology/org.yaml

    # Backstage example organization groups
    - type: url
      target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/acme/org.yaml
      rules:
        - allow: [Group, User]

    # Backstage example templates
    - type: url
      target: https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/sample-templates/react-ssr-template/template.yaml
      rules:
        - allow: [Template]
    - type: url
      target: https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/sample-templates/springboot-grpc-template/template.yaml
      rules:
        - allow: [Template]
    - type: url
      target: https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/sample-templates/create-react-app/template.yaml
      rules:
        - allow: [Template]
    - type: url
      target: https://github.com/spotify/cookiecutter-golang/blob/master/template.yaml
      rules:
        - allow: [Template]
    - type: url
      target: https://github.com/backstage/backstage/blob/master/plugins/scaffolder-backend/sample-templates/docs-template/template.yaml
      rules:
        - allow: [Template]
  processors:
    githubMultiOrg:
      orgs:
        - name: Unity-Technologies-Migration
          groupNamespace: github
          userNamespace: utm
        - name: unity
          groupNamespace: githubCDS
          userNamespace: cds

homepage:
  clocks:
    - label: UTC
      timezone: UTC
    - label: SF
      timezone: "America/Los_Angeles"
    - label: NYC
      timezone: "America/New_York"
    - label: HEL
      timezone: "Europe/Helsinki"
    - label: TYO
      timezone: "Asia/Tokyo"

costInsights:
  engineerCost: 200000
  products:
    computeEngine:
      name: Compute Engine
      icon: compute
    cloudDataflow:
      name: Cloud Dataflow
      icon: data
    cloudStorage:
      name: Cloud Storage
      icon: storage
    bigQuery:
      name: BigQuery
      icon: search
    events:
      name: Events
      icon: data

sentry:
  organization: my-company

rollbar:
  organization: my-company
  # NOTE: The rollbar-backend & accountToken key may be deprecated in the future (replaced by a proxy config)
  accountToken: my-rollbar-account-token

kubernetes:
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters: []

kafka:
  clientId: backstage
  clusters:
    - name: cluster
      brokers:
        - localhost:9092

jenkins:
  instances:
    - name: default
      baseUrl: https://jenkins.example.com
      username: backstage-bot
      apiKey: 123456789abcdef0123456789abcedf012